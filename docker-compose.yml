version: '2'

volumes:
  video-data: {}
  sender-dist: {}
  sender-dev: {}
  sender-node-modules: {}

services:
  web:
    build: frontend/server
    ports:
      - '443:443'
    volumes:
      # Nginx configuration (ease reloading)
      - './frontend/server/nginx.conf:/etc/nginx/nginx.conf:ro'
      # Video content
      - 'video-data:/data/:ro'
      # Sender app
      - 'sender-dist:/sender/dist/:ro'
      - 'sender-dev:/sender/dev/:ro'
      # Receiver app
      - './frontend/receiver:/receiver/:ro'
    restart: always

  sender-builder:
    build: frontend/sender
    volumes:
      # Sources
      - './frontend/sender/:/src/'
      # Node-specific
      - 'sender-node-modules:/src/node_modules'
      # Sender app
      - 'sender-dist:/src/dist/'
      - 'sender-dev:/src/dev/'
    restart: always

  streamer:
    build: streamer
    volumes:
      # Sources
      - './streamer:/streamer:ro'
      # Video content
      - 'video-data:/data/'
    environment:
      SERVER_HOSTNAME: '${SERVER_NAME}'
      STREAMER_HOSTNAME: 'streamer'
      OUTPUT_DIRECTORY: '/data/video'
      SERVER_PATH: '/video'
      OUTPUT_INDEX_FILE_NAME: 'stream.m3u8'
      OUTPUT_TS_FILE_PATTERN: 'stream-#####.ts'

  irc-relay:
    image: globidocker/twitch-irc
    command: none 'twitch-irc-websocket'
    restart: always
