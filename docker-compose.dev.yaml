version: '2'

volumes:
  # Sender application bundle volumes
  sender-dist: {}

  # Receiver application bundle volume
  receiver-dist: {}

  # npm packages store volumes
  sender-node-modules: {}
  receiver-node-modules: {}

  # Backend build cache and binaries
  streamer-stack-root: {}
  streamer-dist: {}

services:

  web:
    # Publishing a port for development
    ports:
      - '8443:443'

  streamer:
    # Publishing a port for development
    ports:
      - '8000:8000'

  sender-builder:
    build: frontend/sender/builder
    volumes:
      # Sources
      - './frontend/sender/app:/app/'
      # Node specific
      - 'sender-node-modules:/app/node_modules'
      # Sender app
      - 'sender-dist:/dist/'
    ports:
      # Exposing port for browser-sync
      - '3001:3000'
    environment:
      TWITCH_CLIENT_ID: '${TWITCH_CLIENT_ID}'
    restart: always

  receiver-builder:
    build: frontend/receiver/builder
    volumes:
      # Source
      - './frontend/receiver/app/:/app/'
      # Node specific
      - 'receiver-node-modules:/app/node_modules'
      # Receiver app
      - 'receiver-dist:/dist/'
    ports:
      # Exposing port for browser-sync
      - '3000:3000'
    environment:
      TWITCH_CLIENT_ID: '${TWITCH_CLIENT_ID}'
    restart: always

  streamer-builder:
    image: 'haskell:8.0.1'
    volumes:
      # Sources
      - './streamer:/app'
      # Stack related storage
      - 'streamer-stack-root:/stack-root'
      # Backend binaries
      - 'streamer-dist:/dist'
    working_dir: '/app'
    command: [
      "stack", "build",
      "--copy-bins",
      "--local-bin-path", "/dist",
      "--file-watch"
    ]
    environment:
      STACK_ROOT: '/stack-root'
    # Stack apparently needs stdin
    stdin_open: true
